!
!CSP
!does
"error
"lit
#
#!
#>
#>>
#bell
#bs
#comma
#cr
#del
#eof
#esc
#ff
#fill-bytes
#lf
#s
#tab
#tib
$?
$has?
%align
%alignment
%alloc
%allocate
%allot
%size
'
'cold
'quit
(
(
(')
((name>))
(+do)
(+loop)
(+loop)-lp+!#
(-do)
(-loop)
(-loop)-lp+!#
(.")
(.debugline)
(.immediate)
(.string)
(:noname)
(;code)
(?do)
(BranchAddr?)
(Constant)
(DoError)
(Field)
(S")
(Value)
(_debug)
(abort")
(again-like)
(begin-like)
(bootmessage)
(break")
(break:)
(bs)
(bye)
(cfa>int)
(chars)
(compilation>1)
(compile)
(const-does>)
(debug)
(do)
(does>)
(does>2)
(emit)
(end-assert)
(endtry)
(enter)
(exit-like)
(for)
(hashkey1)
(hashlfind)
(hashsearch-map)
(header)
(i)
(ins)
(interpretation>1)
(key)
(key?)
(listlfind)
(local)
(localsvocfind)
(loop)
(loop)-lp+!#
(name)
(name>comp)
(name>intn)
(name>x)
(next)
(next)-lp+!#
(nl)
(parse-white)
(process-args)
(quit)
(read-line)
(rehash)
(restore-input)
(ret)
(reveal
(reveal)
(s+loop)
(s+loop)-lp+!#
(save-input)
(search-wordlist)
(system)
(tablelfind)
(then-like)
(try)
(type)
(u+do)
(u-do)
(until-like)
(vocfind)
(word)
(x>int)
(xdel)
(xenter)
(xins)
(xt-see-xt)
)
*
*/
*/mod
+
+!
+DO
+LOOP
+field
+load
+place
+string
+thru
+u8/string
+x/string
,
,"
,Branch
-
-->
-DO
-LOOP
-rot
-trailing
-trailing-garbage
-u8trailing-garbage
-zeros
.
."
.(
.4
.\"
.all
.chars
.debugline
.debugline-stderr
.defname
.error
.error-frame
.error-line
.error-string
.fpath
.id
.included
.invalid
.lib-error
.line
.n
.name
.name-without
.nb
.path
.r
.reg16
.reg32
.reg64
.reg8
.regn
.regv
.rest
.s
.sourcepos
.sreg
.status
.string
.strings
.struc
.voc
.width
.width*2
.width/2
.word
.words
/
/does-handler
/dump
/error
/l
/line
/mod
/string
/w
0<
0<=
0<>
0=
0>
0>=
1+
1-
1/f
2!
2*
2,
2/
2>r
2@
2Constant
2Literal
2Variable
2drop
2dup
2field:
2nip
2over
2r>
2r@
2rdrop
2rot
2swap
2tuck
:
:-hook
:noname
;
;-hook
;code
;pn
;s
<
<#
<<#
<=
<>
<IS>
<compilation
<interpretation
<resolve
<xdel>
<xins>
=
=mkdir
>
>=
>body
>code-address
>definer
>does-code
>error
>exec
>float
>head
>head-noprim
>in
>l
>leave
>mark
>name
>number
>order
>r
>resolve
>stderr
>string
?
???
?CSP
?DO
?DUP-0=-IF
?DUP-IF
?EXIT
?LEAVE
?branch
?branch-lp+!#
?dnegate
?do-like
?dup
?dup-0=-?branch
?dup-?branch
?if
?stack
?struc
?xdel
@
@local#
@local0
@local1
@local2
@local3
A!
A,
AConstant
AGAIN
AHEAD
AL,Ib
ALiteral
ASSUME-LIVE
AUser
AValue
AVariable
AgainCode
AheadCode
Ali#
Alias
BEGIN
BP
BUT
Body
Branch!
BranchAddr?
BranchPointer
BranchTable
BranchTo?
Branches
C"
C-Clearline
C-Formated
C-Highlight
C-Output
C-Pass
C-Stop
C-Table
CLiteral
COMP'
CS-PICK
CS-ROLL
CSP
CheckEnd
CheckWhile
Col#
Com#
Con#
Constant
Create
D-KEY
DO
DOERROR
DOES>
DONE
DT
Debug?
DebugBranch
DebugLoop
DebugMode
Def#
Defer
Defers
DelFix
Disable
Display?
DisplayMode
DoTable
Doe#
ELSE
ENDIF
ESC[
EXIT
Eb
Eb,Gb
Ed
ElseCode
EmitXT
ErrLink
Ev
Ev,Gv
Ext
FLiteral
FMOD
FOR
FTRUNC
FirstBranch
Format
Forth
Forward?
Gb
Gb,Eb
Gnum
Gv
Gv,Ev
HashIndex
HashPointer
HashPop
HashTable
Hashlen
IF
IS
Ib
InfoTable
Iv
Iz
Jb
Jz
LEAVE
LOOP
Last
LastCFA
Leave-D
LeaveCode
Level
Literal
MaxTable
MoreBranchAddr?
MyBranch
NEXT
NIL
Nesting
NewFix
NoFine
NoOutput
O-Buffer
O-DEINIT
O-EMIT
O-INIT
O-PNT
O-PNT@
O-TYPE
Only
Ox
POSTPONE
Pri#
PrimStart
REPEAT
RepeatCheck
RepeatCode
Root
S"
S+LOOP
S,
SLiteral
Scan?
ScanMode
SearchPointer
Str#
Sw
THEN
TO
TO
Type!
TypeXT
U+DO
U-DO
UNREACHABLE
UNTIL
UTF-8-err
Unnest
UntilCode
Use#
User
Val#
Value
Var#
Variable
Vocabulary
WHILE
WhileCode2
WordInfo
XPos
YET
YPos
[
[']
[(')]
[+LOOP]
[?DO]
[AGAIN]
[BEGIN]
[COMP']
[DO]
[ELSE]
[ENDIF]
[FOR]
[IFDEF]
[IFUNDEF]
[IF]
[IS]
[I]
[LOOP]
[NEXT]
[REPEAT]
[THEN]
[UNTIL]
[WHILE]
[[
[char]
[compile]
[defined]
[struct]-search
[struct]-voc
[undefined]
\
\"-parse
\-escape
\-escape-table
\G
\c
]
]L
]]
abort
abort"
abs
absolut-path?
accept
accumulate
action-of
add-included-file
add-lib
add-libpath
addall
address-size
address-size-disasm
adjust-buffer
adjust-locals-list
adjust-locals-size
again-like
alias-mask
alias?
align
aligned
alignlp-f
alignlp-w
allocate
allot
also
also-path
analyse
and
append
append-extend-string
append-l
arg
argc
args-evaluate
args-required
args-required1
argv
assembler
assert(
assert-level
assert0(
assert1(
assert2(
assert3(
assertn
at-deltaxy
at-xy
back-restore
back?
backedge-locals
backspaces
backtrace-return-stack
backtrace-rp0
backtrace-rs-buffer
backward^
base
base-execute
base-regnum
basename
bases
basic-block-end
before-word
begin-like
begin-structure
bell
bin
bindkey
bl
blank
blk
block
block-buffer
block-buffers
block-cold
block-fid
block-included
block-input
block-limit
block-offset
block-position
body>
boot
bootmessage
bounds
branch
branch-lp+!#
break"
break:
break:,
breaker
breaker-size
broken-pipe-error
bucket
buffer
buffer%
buffer-address
buffer-block
buffer-descriptor
buffer-dirty
buffer-fid
buffer-length
buffer-maxlength
buffer-struct
buffers
bye
bye
c!
c!+?
c(abort")
c,
c-(compile)
c-?branch
c-?branch-lp+!#
c-?do
c-@local#
c-\type
c-abort"
c-branch
c-branch-lp+!#
c-c"
c-call
c-callxt
c-do
c-does>
c-exit
c-extend1
c-extender
c-f@local#
c-flit
c-for
c-function
c-function-ft
c-function-rt
c-init
c-laddr#
c-lib%
c-lib-string
c-library
c-library-incomplete
c-library-name
c-library-name-create
c-library-name-setup
c-libs
c-lit
c-lit+
c-loop
c-loop-lp+!#
c-lp+!#
c-named-library-name
c-prefix%
c-prefix-chars
c-prefix-count
c-prefix-lines
c-prefix-lines-end
c-size
c-source-file
c-source-file-execute
c-source-file-id
c-string?
c-tmp-library-name
c/l
c@
c@+
call
call-c
call2
capscomp
capscompare
case
catch
cell
cell%
cell+
cell-fill
cells
cemit
cfa,
cfalign
cfaligned
cff%
cff-cfr
cff-deferred
cff-lha
cff-np
cff-ptypes
cff-rtype
cfield:
char
char%
char+
char-
char-append-buffer
char/
char@
chars
chars/block
check-begin
check-gdb-syntax
check-maxvp
check-path
check-shadow
check-xy
clear-ekey-buffer
clear-leave-stack
clear-libs
clear-line
clear-path
clear-prefixes
clear-tibstack
clearhash
clearstack
clearstacks
close-dir
close-file
close-pipe
cmove
cmove>
code
code-address!
cold
colon?
cols
common-list
compact-filename
compare
compilation>
compile,
compile-2literal
compile-@local
compile-compile-2literal
compile-compile-literal
compile-f@local
compile-fliterals
compile-literal
compile-literals
compile-lp+!
compile-only
compile-only-error
compile-prim1
compile-pushlocal-c
compile-pushlocal-d
compile-pushlocal-f
compile-pushlocal-w
compile-sourcepos
compile-to-prims,
compile-wrapper-function
compile-wrapper-function1
compiler-notfound1
compiler1
con?
conditions
const
const+
const-does>
context
convert
count
count-stacks
count-stacks-a
count-stacks-d
count-stacks-func
count-stacks-n
count-stacks-r
count-stacks-types
count-stacks-void
countif
cputime
cr
create-field
create-file
create-input
create-interpret/compile
create-local
creset
cs-item-size
cs-item?
cs-push-orig
cs-push-part
cs>addr
cset
cstring>sstring
ctoggle
ctrl
ctrl-i
ctrlkeys
ctype
cur-correct
current
current-input
current-sourcepos
d+
d-
d.
d.r
d.s
d0<
d0<=
d0<>
d0=
d0>
d0>=
d2*
d2/
d<
d<=
d<>
d=
d>
d>=
d>f
d>s
dabs
dbg
dbg-ip
dead-code
dead-orig
dec.
dec.-
dec.r
decimal
decode
decompile-prim
def#tib
def-opcode1
def?
defer!
defer-default
defer@
defered?
defined
definer!
definitions
defstart
del-./s
del-string
delete-file
delete-prefix
depth
dest
dest?
df!
df@
dfalign
dfaligned
dffield:
dfloat%
dfloat+
dfloats
dictionary-end
digit?
dirname
disasm
disasm-addr
disasm-addr1
disasm-gdb
discode
disp-step
displacement-info
dmax
dmin
dnegate
do-dest
do-dest?
dobacktrace
docol:
docon:
dodefer:
dodoes,
dodoes:
does-code!
does-exec
does-handler!
does?
dofield:
double%
douser:
dovalue:
dovar:
dozerofield
dp
dpl
dpp
drop
du<
du<=
du<>
du=
du>
du>=
dummy
dump
dump-fi
dup
e?
edit-line
ekey
ekey-buffer
ekey-buffered
ekey>char
ekey>fkey
ekey?
emit
emit-file
empty-buffer
empty-buffers
end-c-library
end-code
end-struct
end-structure
end^
endcase
endof
endscope
endtry
endtry-iferror
environment
environment-wordlist
environment?
erase
error-stack
error>
errorhandler
errstring
esc-prefix
esc-sequence
esc-sequences
evaluate
evaluate-input
everychar
everyline
exception
execute
execute-parsing
execute-parsing-file
execute-parsing-named-file
execute-parsing-wrapper
exit-like
expand-tib
expandtopic
expect
extend-mem
extract-word
extractpath
f!
f$
f*
f**
f**2
f+
f,
f-
f.
f.rdp
f.s
f/
f0<
f0<=
f0<>
f0=
f0>
f0>=
f2*
f2/
f83find
f83search
f<
f<=
f<>
f=
f>
f>=
f>buf-rdp
f>buf-rdp-try
f>d
f>l
f>s
f>str-rdp
f@
f@local#
f@local0
f@local1
fabs
facos
facosh
falign
faligned
falog
false
fasin
fasinh
fatan
fatan2
fatanh
faxpy
fconstant
fcos
fcosh
fdepth
fdrop
fdup
fe.
fexp
fexpm1
ffcall-present
ffield:
field
field,
field:
file-eof?
file-input
file-position
file-size
file-status
filename-match
fill
find
find-method
find-name
find-prev-line
finish-code
first-throw
fix-does-code
flag-sign
flash!
flashc!
fln
flnp1
float
float%
float+
floats
flog
floor
flush
flush-blocks
flush-file
flush-icache
fm*
fm*/
fm/
fm/mod
fmax
fmin
fnegate
fnip
force-open
forget-dyncode
form
forth-wordlist
forthstart
forward^
fover
fp!
fp0
fp@
fpath
fpath+
fpath=
fpick
free
free-mem-var
front-char
front-string
frot
fround
fs.
fsin
fsincos
fsinh
fsqrt
fswap
ftan
ftanh
ftuck
fvariable
f~
f~abs
f~rel
gdb-addr-sep-char
gen-filename
gen-par
gen-par-a
gen-par-d
gen-par-func
gen-par-n
gen-par-r
gen-par-types
gen-par-void
gen-wrapped-a
gen-wrapped-call
gen-wrapped-d
gen-wrapped-func
gen-wrapped-n
gen-wrapped-r
gen-wrapped-stmt
gen-wrapped-types
gen-wrapped-void
gen-wrapper-function
get-block-fid
get-buffer
get-current
get-dir
get-history
get-line
get-next
get-order
getbase
getenv
handler
handler-intro,
has?
hash
hash-alloc
hash-cold
hash-find
hash-method
hash-reveal
hashbits
hashdouble
hashsearch-map
head?
header
header,
here
hex
hex.
hist-pos
hist-setpos
history
history-cold
history-file
hold
holdbuf
holdbuf-end
holdend
holdptr
i
i'
id.
iferror
illegal-inst
image-header
image-included-files
immediate
immediate-mask
immediate-prefix
immz
in-dictionary?
in-return-stack?
include
include-ffi.h-string
include-file
included
included-files
included-files-mark
included1
included?
includefilename
infile-execute
infile-id
init-asm
init-backtrace
init-buffer
init-c-source-file
init-included-files
init-libcc
init-vp
inithash
initvoc
input-error-data
input-lexeme
input-lexeme!
input-method
input-start-line
input-stream
input-stream-header
input-var
insRule
insert
insert-char
interpret
interpret/compile-comp
interpret/compile-int
interpret/compile-struct
interpret/compile:
interpret/compile?
interpret1
interpretation>
interpreter-notfound1
interpreter1
invert
j
jcc-short
jump
k
k-alt-mask
k-ctrl-mask
k-delete
k-down
k-end
k-f1
k-f10
k-f11
k-f12
k-f2
k-f3
k-f4
k-f5
k-f6
k-f7
k-f8
k-f9
k-home
k-insert
k-left
k-next
k-prior
k-right
k-shift-mask
k-up
k1
k10
k11
k12
k2
k3
k4
k5
k6
k7
k8
k9
key
key-buffer
key-buffered
key-file
key?
key?-file
keycode
kill-prefix
l!
l/s
l@
laddr#
last-block
last?
lastflags
lastlink!
lastxt
latest
latestxt
lcount-mask
leave-sp
leave-stack
leave-stack-size
leave>
level+
level-
lib-error
lib-filename
lib-handle
lib-handle-addr
lib-modulename
lib-sym
libcc-named-dir
libcc-named-dir-v
libcc-path
libcc-tmp-dir
libcc-types
libffi-present
libtool-cc
libtool-command
libtool-flags
license
line-end-hook
linew
linew-off
link-wrapper-function
linked
list
list%
list-append
list-insert
list-map
list-next
list-payload
list-size
lit
lit+
lit-perform
lit@
live-orig
load
loadfile
loadfilename
loadfilename#>str
loadline
locals
locals-:-hook
locals-;-hook
locals-buffer
locals-dp
locals-list
locals-size
locals-types
locals-wordlist
locals|
longstring,
look
lookup
loop-like
lp!
lp+
lp+!#
lp+2
lp-
lp-offset
lp-offset,
lp0
lp@
lshift
m*
m*/
m+
main-task
make-hash
make-path
makepass
mappedwordlist
mark-end
mark-start
marker
marker!
marker,
masksx
max
max#tib
max-errors
max-name-length
max-single-byte
maxalign
maxaligned
maxdepth-.s
maxvp
maxvp-limit
mem,
mem-SIB
mem-modRM
min
mkdir-parents
mod
mov-reg8-Ib
mov-regv-Iv
move
ms
nalign
naligned
name
name-see
name-too-long?
name-too-short?
name>comp
name>int
name>string
name?int
need/
needs
negate
nestXT
nestXT-checkSpecial
new-locals-find
new-locals-map
new-locals-reveal
new-locals-wl
new-tib
newline
next-arg
next-buffer
next-exception
next-head
next-line
next-path
next-prim
next-task
nextname
nextname-header
nextname-string
nip
nl
nlcount
nlflag
no-compilation-does-code
no-interpretation-does-code
no.extensions
non-orig?
noname
noname-header
noop
normal-dp
nothrow
notype-execute
number
number?
of
off
offset
ofile
old-dpp
old-input
on
only-path
opcode1-table
open-blocks
open-dir
open-file
open-fpath-file
open-lib
open-ofile
open-path-file
open-pipe
open-wrappers
operand-size
operand-size-disasm
or
order
orig?
os-boot
os-cold
os-execute-parsing
other-control-flow
outfile-execute
outfile-id
over
pad
pad-minsize
page
parse
parse-function-types
parse-libcc-type
parse-name
parse-num
parse-num-x
parse-word
parser
parser1
part-type
path+
path-allot
path=
path>string
pathdirs
pathsep?
pathstring
peephole-compile,
perform
pi
pick
place
pn
pop-file
pop-reg
postpone,
postponer1
precision
prefix-found
prefix-off
prefix-string
prepend-dirname
preserve-root
prev-line
prev-task
previous
previous-path
prim>name
prim?
print-backtrace
print-base
print-bt-entry
print-c-prefix-line
print-c-prefix-lines
print-rep
printdebugdata
process-args
process-option
prompt
push-file
push-reg
push-right
query
quit
r/o
r/w
r>
r@
rAX,Iz
rdrop
read-dir
read-file
read-line
read-loop
recurse
recursive
refill
reg16-names
reg8-names
reg8-names-norex
rehash
rehash-method
rehashall
remove~+
rename-file
repeat-prefix
repeat-prefix-disasm
replace-rpath
reposition-file
represent
require
required
reserve-mem
resize
resize-file
restore
restore-bp
restore-input
restore-see-flags
restrict
restrict-mask
reveal
reveal-method
revealed
reworkdir
rex-prefix
rex-prefix-disasm
roll
rot
rows
rp!
rp0
rp@
rshift
s'>unumber?
s+
s-k1
s-k10
s-k11
s-k12
s-k2
s-k3
s-k4
s-k5
s-k6
s-k7
s-k8
s-k9
s>d
s>f
s>number
s>number?
s>unumber?
s\"
save-buffer
save-buffers
save-c-prefix-line
save-input
save-mem
save-mem-dict
save-mem-here
save-see-flags
save-task
savesystem
scan
scan-back
scanIF
scanword
scope
scope?
scopestart
scr
scratch
screenw
script?
seal
search
search-name
search-prefix
search-voc
search-wordlist
see
see-code
see-code-next-inline
see-code-range
see-threaded
seecode
seecol
seecon
seedefer
seedoes
seefield
seeuser
seevalue
seevar
set-add-like
set-add-likes
set-bp
set-current
set-dir
set-encoding-fixed-width
set-encoding-utf-8
set-locals-size-list
set-next-code
set-noarg
set-order
set-precision
sf!
sf@
sfalign
sfaligned
sffield:
sfind
sfloat%
sfloat+
sfloats
sfnumber
sgn
sh
shift-args
sign
sign?
simple-see
simple-see-range
simple-see-word
skip
skip-..-prefixes
sl@
slowvoc
slurp-fid
slurp-file
sm/rem
snumber?
some-clocal
some-dlocal
some-flocal
some-wlocal
source
source-id
sourcefilename
sourceline#
sp!
sp0
sp@
space
spaces
span
sreg-names
state
stderr
stdin
stdout
store-backtrace
str<
str=
str>loadfilename#
strerror
string,
string-
string-prefix?
string-table
strsignal
struct
sub-list?
sw@
swap
sword
sys?
system
table
table-find
tablesearch-map
tag-offsets
tcode
terminal-input
tfile
th
then-like
threaded>name
threaded>xt
threading-method
throw
thru
tib
tib+
tib-full?
ticking-compile-only-error
time&date
toupper
trans:
transcode
translate
true
try
tuck
type
type-letter
typewhite
u.
u.r
u8!+
u8!+?
u8<<
u8>>
u8@
u8@+
u8\string-
u8addrlen
u8emit
u8key
u8len
u8width
u<
u<=
u<>
u=
u>
u>=
uallot
ud.
ud.r
ud/mod
udp
ul@
um*
um/mod
umin
under+
unkey
unkeys
unloop
until-like
unused
up!
update
update-image-included-files
update-image-order
updated?
uppercase
usable-dictionary-end
use
user?
useraddr
utf-8-cold
utime
uw@
v*
var?
version-string
vlist
voclink
vocs
vocsearch
vp
vp!
vt100-decode
w!
w/o
w@
warnings
warp?
wcall
wcwidth
what's
within
word
word-lex
word-pno-size
wordlist
wordlist-extend
wordlist-id
wordlist-link
wordlist-map
wordlist-map-struct
wordlist-struct
wordlist-words
words
wrapper-function-name
write-file
write-line
x-size
x-width
x@+/string
x\string-
xback
xback-restore
xc!+?
xc-size
xc@
xc@+
xchar+
xchar-
xchar-history
xchg-ax
xclear-line
xclear-tib
xcur-correct
xemit
xend-pos
xeof
xfirst-pos
xforw
xhold
xkey
xkill-expand
xor
xretype
xt-see
xt-see-xt
xt>threaded
xtab-expand
xtprim?
zeros
{
~~
