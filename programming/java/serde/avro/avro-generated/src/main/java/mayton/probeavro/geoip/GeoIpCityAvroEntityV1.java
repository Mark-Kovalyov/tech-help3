/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package mayton.probeavro.geoip;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class GeoIpCityAvroEntityV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 937737331262280084L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GeoIpCityAvroEntityV1\",\"namespace\":\"mayton.probeavro.geoip\",\"fields\":[{\"name\":\"startIpNum\",\"type\":\"int\"},{\"name\":\"endIpNum\",\"type\":\"int\"},{\"name\":\"country\",\"type\":[\"string\",\"null\"]},{\"name\":\"region\",\"type\":[\"string\",\"null\"]},{\"name\":\"city\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<GeoIpCityAvroEntityV1> ENCODER =
      new BinaryMessageEncoder<GeoIpCityAvroEntityV1>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<GeoIpCityAvroEntityV1> DECODER =
      new BinaryMessageDecoder<GeoIpCityAvroEntityV1>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<GeoIpCityAvroEntityV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<GeoIpCityAvroEntityV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<GeoIpCityAvroEntityV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<GeoIpCityAvroEntityV1>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this GeoIpCityAvroEntityV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a GeoIpCityAvroEntityV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a GeoIpCityAvroEntityV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static GeoIpCityAvroEntityV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private int startIpNum;
   private int endIpNum;
   private java.lang.CharSequence country;
   private java.lang.CharSequence region;
   private java.lang.CharSequence city;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public GeoIpCityAvroEntityV1() {}

  /**
   * All-args constructor.
   * @param startIpNum The new value for startIpNum
   * @param endIpNum The new value for endIpNum
   * @param country The new value for country
   * @param region The new value for region
   * @param city The new value for city
   */
  public GeoIpCityAvroEntityV1(java.lang.Integer startIpNum, java.lang.Integer endIpNum, java.lang.CharSequence country, java.lang.CharSequence region, java.lang.CharSequence city) {
    this.startIpNum = startIpNum;
    this.endIpNum = endIpNum;
    this.country = country;
    this.region = region;
    this.city = city;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return startIpNum;
    case 1: return endIpNum;
    case 2: return country;
    case 3: return region;
    case 4: return city;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: startIpNum = (java.lang.Integer)value$; break;
    case 1: endIpNum = (java.lang.Integer)value$; break;
    case 2: country = (java.lang.CharSequence)value$; break;
    case 3: region = (java.lang.CharSequence)value$; break;
    case 4: city = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'startIpNum' field.
   * @return The value of the 'startIpNum' field.
   */
  public int getStartIpNum() {
    return startIpNum;
  }


  /**
   * Sets the value of the 'startIpNum' field.
   * @param value the value to set.
   */
  public void setStartIpNum(int value) {
    this.startIpNum = value;
  }

  /**
   * Gets the value of the 'endIpNum' field.
   * @return The value of the 'endIpNum' field.
   */
  public int getEndIpNum() {
    return endIpNum;
  }


  /**
   * Sets the value of the 'endIpNum' field.
   * @param value the value to set.
   */
  public void setEndIpNum(int value) {
    this.endIpNum = value;
  }

  /**
   * Gets the value of the 'country' field.
   * @return The value of the 'country' field.
   */
  public java.lang.CharSequence getCountry() {
    return country;
  }


  /**
   * Sets the value of the 'country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.CharSequence value) {
    this.country = value;
  }

  /**
   * Gets the value of the 'region' field.
   * @return The value of the 'region' field.
   */
  public java.lang.CharSequence getRegion() {
    return region;
  }


  /**
   * Sets the value of the 'region' field.
   * @param value the value to set.
   */
  public void setRegion(java.lang.CharSequence value) {
    this.region = value;
  }

  /**
   * Gets the value of the 'city' field.
   * @return The value of the 'city' field.
   */
  public java.lang.CharSequence getCity() {
    return city;
  }


  /**
   * Sets the value of the 'city' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.CharSequence value) {
    this.city = value;
  }

  /**
   * Creates a new GeoIpCityAvroEntityV1 RecordBuilder.
   * @return A new GeoIpCityAvroEntityV1 RecordBuilder
   */
  public static mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder newBuilder() {
    return new mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder();
  }

  /**
   * Creates a new GeoIpCityAvroEntityV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new GeoIpCityAvroEntityV1 RecordBuilder
   */
  public static mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder newBuilder(mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder other) {
    if (other == null) {
      return new mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder();
    } else {
      return new mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder(other);
    }
  }

  /**
   * Creates a new GeoIpCityAvroEntityV1 RecordBuilder by copying an existing GeoIpCityAvroEntityV1 instance.
   * @param other The existing instance to copy.
   * @return A new GeoIpCityAvroEntityV1 RecordBuilder
   */
  public static mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder newBuilder(mayton.probeavro.geoip.GeoIpCityAvroEntityV1 other) {
    if (other == null) {
      return new mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder();
    } else {
      return new mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for GeoIpCityAvroEntityV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GeoIpCityAvroEntityV1>
    implements org.apache.avro.data.RecordBuilder<GeoIpCityAvroEntityV1> {

    private int startIpNum;
    private int endIpNum;
    private java.lang.CharSequence country;
    private java.lang.CharSequence region;
    private java.lang.CharSequence city;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.startIpNum)) {
        this.startIpNum = data().deepCopy(fields()[0].schema(), other.startIpNum);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.endIpNum)) {
        this.endIpNum = data().deepCopy(fields()[1].schema(), other.endIpNum);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.country)) {
        this.country = data().deepCopy(fields()[2].schema(), other.country);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.region)) {
        this.region = data().deepCopy(fields()[3].schema(), other.region);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.city)) {
        this.city = data().deepCopy(fields()[4].schema(), other.city);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing GeoIpCityAvroEntityV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(mayton.probeavro.geoip.GeoIpCityAvroEntityV1 other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.startIpNum)) {
        this.startIpNum = data().deepCopy(fields()[0].schema(), other.startIpNum);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.endIpNum)) {
        this.endIpNum = data().deepCopy(fields()[1].schema(), other.endIpNum);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.country)) {
        this.country = data().deepCopy(fields()[2].schema(), other.country);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.region)) {
        this.region = data().deepCopy(fields()[3].schema(), other.region);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.city)) {
        this.city = data().deepCopy(fields()[4].schema(), other.city);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'startIpNum' field.
      * @return The value.
      */
    public int getStartIpNum() {
      return startIpNum;
    }


    /**
      * Sets the value of the 'startIpNum' field.
      * @param value The value of 'startIpNum'.
      * @return This builder.
      */
    public mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder setStartIpNum(int value) {
      validate(fields()[0], value);
      this.startIpNum = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'startIpNum' field has been set.
      * @return True if the 'startIpNum' field has been set, false otherwise.
      */
    public boolean hasStartIpNum() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'startIpNum' field.
      * @return This builder.
      */
    public mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder clearStartIpNum() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'endIpNum' field.
      * @return The value.
      */
    public int getEndIpNum() {
      return endIpNum;
    }


    /**
      * Sets the value of the 'endIpNum' field.
      * @param value The value of 'endIpNum'.
      * @return This builder.
      */
    public mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder setEndIpNum(int value) {
      validate(fields()[1], value);
      this.endIpNum = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'endIpNum' field has been set.
      * @return True if the 'endIpNum' field has been set, false otherwise.
      */
    public boolean hasEndIpNum() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'endIpNum' field.
      * @return This builder.
      */
    public mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder clearEndIpNum() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'country' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountry() {
      return country;
    }


    /**
      * Sets the value of the 'country' field.
      * @param value The value of 'country'.
      * @return This builder.
      */
    public mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder setCountry(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.country = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'country' field has been set.
      * @return True if the 'country' field has been set, false otherwise.
      */
    public boolean hasCountry() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'country' field.
      * @return This builder.
      */
    public mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder clearCountry() {
      country = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'region' field.
      * @return The value.
      */
    public java.lang.CharSequence getRegion() {
      return region;
    }


    /**
      * Sets the value of the 'region' field.
      * @param value The value of 'region'.
      * @return This builder.
      */
    public mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder setRegion(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.region = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'region' field has been set.
      * @return True if the 'region' field has been set, false otherwise.
      */
    public boolean hasRegion() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'region' field.
      * @return This builder.
      */
    public mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder clearRegion() {
      region = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'city' field.
      * @return The value.
      */
    public java.lang.CharSequence getCity() {
      return city;
    }


    /**
      * Sets the value of the 'city' field.
      * @param value The value of 'city'.
      * @return This builder.
      */
    public mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder setCity(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.city = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'city' field has been set.
      * @return True if the 'city' field has been set, false otherwise.
      */
    public boolean hasCity() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'city' field.
      * @return This builder.
      */
    public mayton.probeavro.geoip.GeoIpCityAvroEntityV1.Builder clearCity() {
      city = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public GeoIpCityAvroEntityV1 build() {
      try {
        GeoIpCityAvroEntityV1 record = new GeoIpCityAvroEntityV1();
        record.startIpNum = fieldSetFlags()[0] ? this.startIpNum : (java.lang.Integer) defaultValue(fields()[0]);
        record.endIpNum = fieldSetFlags()[1] ? this.endIpNum : (java.lang.Integer) defaultValue(fields()[1]);
        record.country = fieldSetFlags()[2] ? this.country : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.region = fieldSetFlags()[3] ? this.region : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.city = fieldSetFlags()[4] ? this.city : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<GeoIpCityAvroEntityV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<GeoIpCityAvroEntityV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<GeoIpCityAvroEntityV1>
    READER$ = (org.apache.avro.io.DatumReader<GeoIpCityAvroEntityV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.startIpNum);

    out.writeInt(this.endIpNum);

    if (this.country == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.country);
    }

    if (this.region == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.region);
    }

    if (this.city == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.city);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.startIpNum = in.readInt();

      this.endIpNum = in.readInt();

      if (in.readIndex() != 0) {
        in.readNull();
        this.country = null;
      } else {
        this.country = in.readString(this.country instanceof Utf8 ? (Utf8)this.country : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.region = null;
      } else {
        this.region = in.readString(this.region instanceof Utf8 ? (Utf8)this.region : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.city = null;
      } else {
        this.city = in.readString(this.city instanceof Utf8 ? (Utf8)this.city : null);
      }

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.startIpNum = in.readInt();
          break;

        case 1:
          this.endIpNum = in.readInt();
          break;

        case 2:
          if (in.readIndex() != 0) {
            in.readNull();
            this.country = null;
          } else {
            this.country = in.readString(this.country instanceof Utf8 ? (Utf8)this.country : null);
          }
          break;

        case 3:
          if (in.readIndex() != 0) {
            in.readNull();
            this.region = null;
          } else {
            this.region = in.readString(this.region instanceof Utf8 ? (Utf8)this.region : null);
          }
          break;

        case 4:
          if (in.readIndex() != 0) {
            in.readNull();
            this.city = null;
          } else {
            this.city = in.readString(this.city instanceof Utf8 ? (Utf8)this.city : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










