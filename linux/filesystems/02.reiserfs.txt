# mkfs.reiserfs
Usage: mkfs.reiserfs [options]  device [block-count]

Options:

  -b | --block-size N              size of file-system block, in bytes
  -j | --journal-device FILE       path to separate device to hold journal
  -s | --journal-size N            size of the journal in blocks
  -o | --journal-offset N          offset of the journal from the start of
                                   the separate device, in blocks
  -t | --transaction-max-size N    maximal size of transaction, in blocks
  -B | --badblocks file            store all bad blocks given in file on the fs
  -h | --hash rupasov|tea|r5       hash function to use by default
  -u | --uuid UUID                 store UUID in the superblock
  -l | --label LABEL               store LABEL in the superblock
  --format 3.5|3.6                 old 3.5 format or newer 3.6
  -f | --force                     specified once, make mkreiserfs the whole
                                   disk, not block device or mounted partition;
                                   specified twice, do not ask for confirmation
  -q | --quiet                     quiet work without messages, progress and
                                   questions. Useful if run in a script. For use
                                   by end users only.
  -d | --debug                     print debugging information during mkreiser
  -V                               print version and exit


# mkfs.reiserfs /dev/sda4
mkfs.reiserfs 3.6.27

Guessing about desired format.. Kernel 5.0.0-37-generic is running.
Format 3.6 with standard journal
Count of blocks on the device: 31250176
Number of blocks consumed by mkreiserfs formatting process: 9165
Blocksize: 4096
Hash function used to sort names: "r5"
Journal Size 8193 blocks (first block 18)
Journal Max transaction length 1024
inode generation number: 0
UUID: c774dd7a-81db-427b-8f70-7cd11ca6c995
ATTENTION: YOU SHOULD REBOOT AFTER FDISK!
    ALL DATA WILL BE LOST ON '/dev/sda4'!
Continue (y/n):y
Initializing journal - 0%....20%....40%....60%....80%....100%
Syncing..ok
ReiserFS is successfully created on /dev/sda4.


root@ryzen-ssd:~# mkfs.reiserfs -b 512 /dev/sda4
mkfs.reiserfs 3.6.27

Block sizes smaller than 4k are not supported.
root@ryzen-ssd:~# mkfs.reiserfs -b 1024 /dev/sda4
mkfs.reiserfs 3.6.27

Block sizes smaller than 4k are not supported.


Other tools
===========

debugreiserfs  fsck.reiserfs  mkfs.reiserfs  mkreiserfs  resize_reiserfs


Links
=====

Tail packing

http://citforum.ck.ua/operating_systems/linux/robbins/fs02.shtml

